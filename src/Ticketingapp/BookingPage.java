/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ticketingapp;

/**
 *
 * @author user
 */
import java.awt.Dimension;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.List;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 * @author Gabriel
 */
public class BookingPage extends javax.swing.JFrame {

    /**
     * Creates new form BookingPage
     */
    public BookingPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        NameField = new javax.swing.JTextField();
        StudentCheckBox = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        TicketValue = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Route route = new Route();
        List<String> routes = route.depArrRoute();
        RouteListComboBox = new javax.swing.JComboBox();
        ConfirmButton = new javax.swing.JButton();
        AllTicketsBox = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        ReturnCheckBox = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Name");

        NameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameFieldActionPerformed(evt);
            }
        });

        StudentCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                StudentCheckBoxItemStateChanged(evt);
            }
        });
        StudentCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentCheckBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Student");

        jLabel3.setText("Price");

        TicketValue.setText("Value");

        jLabel5.setText("Route");

        RouteListComboBox.setModel(new javax.swing.DefaultComboBoxModel(routes.toArray()));
        RouteListComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                RouteListComboBoxItemStateChanged(evt);
            }
        });
        RouteListComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RouteListComboBoxActionPerformed(evt);
            }
        });

        ConfirmButton.setText("Confirm");
        ConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmButtonActionPerformed(evt);
            }
        });

        AllTicketsBox.setText("All Tickets");
        AllTicketsBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AllTicketsBoxActionPerformed(evt);
            }
        });

        jLabel6.setText("Return");

        ReturnCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ReturnCheckBoxItemStateChanged(evt);
            }
        });

        jLabel4.setText("Created by Gabriel Adoyi");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(18, 18, 18)
                                                .addComponent(StudentCheckBox)
                                                .addGap(68, 68, 68)
                                                .addComponent(jLabel6)
                                                .addGap(18, 18, 18)
                                                .addComponent(ReturnCheckBox))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel1)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                                                .addComponent(jLabel3)))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(TicketValue)
                                                        .addComponent(NameField, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(RouteListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(ConfirmButton)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(AllTicketsBox)
                                                                .addGap(17, 17, 17)))))
                                .addContainerGap(39, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addGap(135, 135, 135))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(NameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(StudentCheckBox)
                                        .addComponent(ReturnCheckBox)
                                        .addComponent(jLabel6))
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(RouteListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel5))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(TicketValue)
                                        .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(ConfirmButton)
                                        .addComponent(AllTicketsBox))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>

    private void NameFieldActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void StudentCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void RouteListComboBoxActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    TicketPricing tp = new TicketPricing();
    Route rt = new Route();
    NumberFormat nf = NumberFormat.getInstance(Locale.US);
    DecimalFormat df = (DecimalFormat) nf;
    TicketManagement tm = new TicketManagement();


    private void RouteListComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            int item = RouteListComboBox.getSelectedIndex();
            //System.out.println(item);
            if (ReturnCheckBox.isSelected() == true) {
                if (StudentCheckBox.isSelected() == true) {

                    TicketValue.setText("€" + df.format(tp.studentDiscount(tp.returnPrice(tp.routePrice(rt.populateRoutes().get(item))))));
                    //System.out.println(df.format(tp.studentDiscount(tp.returnPrice(tp.routePrice(rt.populateRoutes().get(item))))));
                }
                //when student is not selected
                else
                    TicketValue.setText("€" + df.format(tp.returnPrice(tp.routePrice(rt.populateRoutes().get(item)))));
            }
            // if the person did not select return
            else {
                if (StudentCheckBox.isSelected() == true) {
                    TicketValue.setText("€" + df.format(tp.studentDiscount(tp.routePrice(rt.populateRoutes().get(item)))));
                }
                //if the person did not select return and studen, it give only route price
                else
                    TicketValue.setText("€" + df.format(tp.routePrice(rt.populateRoutes().get(item))));
            }
        }
    }

    private void ReturnCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {
        // checking what we selectet in the comboBox
        int item = RouteListComboBox.getSelectedIndex();

        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {


            if (StudentCheckBox.isSelected() == true) {
                TicketValue.setText("€" + df.format(tp.studentDiscount(tp.returnPrice(tp.routePrice(rt.populateRoutes().get(item))))));
            } else
                TicketValue.setText("€" + df.format(tp.returnPrice(tp.routePrice(rt.populateRoutes().get(item)))));
        } else if (evt.getStateChange() == java.awt.event.ItemEvent.DESELECTED) {
            if (StudentCheckBox.isSelected() == true) {
                TicketValue.setText("€" + df.format(tp.studentDiscount(tp.routePrice(rt.populateRoutes().get(item)))));
            } else
                TicketValue.setText("€" + df.format(tp.routePrice(rt.populateRoutes().get(item))));
        }

    }

    private void StudentCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {
        int item = RouteListComboBox.getSelectedIndex();
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {


            if (ReturnCheckBox.isSelected() == true) {
                TicketValue.setText("€" + df.format(tp.studentDiscount(tp.returnPrice(tp.routePrice(rt.populateRoutes().get(item))))));
            } else if (ReturnCheckBox.isSelected() == false) {
                TicketValue.setText("€" + df.format(tp.studentDiscount(tp.routePrice(rt.populateRoutes().get(item)))));
            } else
                TicketValue.setText("€" + df.format(tp.studentDiscount(tp.routePrice(rt.populateRoutes().get(item)))));
        } else if (evt.getStateChange() == java.awt.event.ItemEvent.DESELECTED) {

            if (ReturnCheckBox.isSelected() == true) {
                TicketValue.setText("€" + df.format(tp.returnPrice(tp.routePrice(rt.populateRoutes().get(item)))));
            } else
                TicketValue.setText("€" + df.format(tp.routePrice(rt.populateRoutes().get(item))));
        }
    }

    private void ConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {
        if (evt.getSource() != null) {
            Ticketing ticket = new Ticketing(new Person(NameField.getText(), StudentCheckBox.isSelected()), RouteListComboBox.getSelectedIndex(), ReturnCheckBox.isSelected(), Double.parseDouble(TicketValue.getText().substring(1)));
            tm.IssueTicket(ticket);
        }
    }

    private void AllTicketsBoxActionPerformed(java.awt.event.ActionEvent evt) {
        if (evt.getSource() != null) {
            JTable table = new JTable(buildTableModel());
            JScrollPane view = new JScrollPane(table);
            view.setPreferredSize(new Dimension(650, 300));
            JOptionPane.showMessageDialog(null, view, "All Tickets", JOptionPane.PLAIN_MESSAGE);
        }
    }

    private DefaultTableModel buildTableModel() {
        DefaultTableModel model = new DefaultTableModel();

        String[] columnNames = {"Ticket ID", "Customer Name", "Price", "Student?", "Return", "Route"};
        model.setColumnIdentifiers(columnNames);

        for (Ticketing t : tm.IssuedTickets()) {

            Object[] o = new Object[6];

            o[0] = t.ticketId;
            o[1] = t.person.name;
            o[2] = "€" + t.price;
            o[3] = t.person.isStudent;
            o[4] = t.oneWay;
            o[5] = rt.depArrRoute().get(t.route);

            //System.out.println(t.ticketId + " " + t.person.name + " " + t.person.isStudent + " " + rt.depArrRoute().get(t.route) );

            model.addRow(o);
        }
        return model;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookingPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton AllTicketsBox;
    private javax.swing.JButton ConfirmButton;
    private javax.swing.JTextField NameField;
    private javax.swing.JCheckBox ReturnCheckBox;
    private javax.swing.JComboBox RouteListComboBox;
    private javax.swing.JCheckBox StudentCheckBox;
    private javax.swing.JLabel TicketValue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    // End of variables declaration
}


